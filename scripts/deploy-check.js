#!/usr/bin/env node

require('dotenv').config();

const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é –≤ Railway...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const requiredFiles = [
  'package.json',
  'index.js',
  'public/index.html',
  'public/css/style.css',
  'public/js/app.js',
  'public/js/api.js',
  'public/js/ui.js',
  'railway.json',
  'Procfile'
];

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:');
let allFilesExist = true;

requiredFiles.forEach(file => {
  const exists = fs.existsSync(file);
  console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
  if (!exists) allFilesExist = false;
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json:');
try {
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  const requiredFields = ['name', 'version', 'main', 'scripts', 'dependencies'];
  requiredFields.forEach(field => {
    if (packageJson[field]) {
      console.log(`‚úÖ ${field}: ${typeof packageJson[field] === 'object' ? 'OK' : packageJson[field]}`);
    } else {
      console.log(`‚ùå ${field}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
      allFilesExist = false;
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  const requiredDeps = ['express', 'cors', 'node-telegram-bot-api', 'axios'];
  console.log('\nüìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:');
  requiredDeps.forEach(dep => {
    if (packageJson.dependencies && packageJson.dependencies[dep]) {
      console.log(`‚úÖ ${dep}: ${packageJson.dependencies[dep]}`);
    } else {
      console.log(`‚ùå ${dep}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
      allFilesExist = false;
    }
  });
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json:', error.message);
  allFilesExist = false;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
const envExample = fs.existsSync('env.example');
console.log(`${envExample ? '‚úÖ' : '‚ùå'} env.example`);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã public
console.log('\nüì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:');
const publicDir = fs.existsSync('public');
const publicIndex = fs.existsSync('public/index.html');
const publicCss = fs.existsSync('public/css/style.css');
const publicJs = fs.existsSync('public/js/app.js');

console.log(`${publicDir ? '‚úÖ' : '‚ùå'} public/ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è`);
console.log(`${publicIndex ? '‚úÖ' : '‚ùå'} public/index.html`);
console.log(`${publicCss ? '‚úÖ' : '‚ùå'} public/css/style.css`);
console.log(`${publicJs ? '‚úÖ' : '‚ùå'} public/js/app.js`);

if (!publicDir || !publicIndex || !publicCss || !publicJs) {
  allFilesExist = false;
}

// –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
console.log('\nüéØ –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:');
if (allFilesExist) {
  console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é –≤ Railway!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–¥ –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');
  console.log('2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Railway');
  console.log('3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  console.log('4. –î–æ–∂–¥–∏—Ç–µ—Å—å —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è');
  console.log('\nüöÄ –£–¥–∞—á–∏ —Å –¥–µ–ø–ª–æ–µ–º!');
} else {
  console.log('‚ùå –ü—Ä–æ–µ–∫—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.');
  process.exit(1);
} 